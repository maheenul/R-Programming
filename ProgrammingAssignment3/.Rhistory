rpois(10,2)
rpois(10,20)
ppois(2,2)## Cumulative distribution
ppois(4,2)
ppois(6,2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100,0,2)
y <- 0.5 + 2*x +e
summary(y)
plot(x,y)
set.seed(10)
x <- rbinom(100,1,0.5)
e <- rnorm(100,0,2)
y <- 0.5 + 2*x + e
summary(y)
plot(x,y)
?rbinom
plot(x,y)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3*x
y <- rpois(100,exp(log.mu))
summary(y)
plot(x,y)
set.seed(1)
sample(1:10,4)
sample(letters,5)
sample(letters,5)
sample(letters,5)
sample(letters,5)
sample(1:10,4)
set.seed(1)
sample(1:10,4)
sample(letters,5)
sample(1:10)  ## permutation
sample(1:10)
sample(1:10, replace=TRUE)## Sample w/replacement
system.time(readLines("http://www.jhsph.edu"))
x <- hilbert(1000)
hilbert <- function(n) {
i <- 1:n
1 / outer(i-1,i,"+")
}
x <- hilbert(1000)
system.time(svd(x))
Rprof(sample.interval=1000)
q()
rm(ls())
ls()
rm(list = ls())
?read.csv
outcome <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses= "character")
head(outcome)
getwd()
outcome <- read.csv("~/ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses= "character")
head(outcome)
outcome <- read.csv("/ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses= "character")
head(outcome)
## Programming Assignment 3
## ?read.csv
outcome <- read.csv("/ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses= "character")
## ?read.csv
outcome <- read.csv('/ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
pwd()
head(outcome)
pwd()
pwd
getwd()
outcome <- read.csv('/ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('D:/Software_projects/Assignments/R/ProgrammingAssignment3')
outcome <- read.csv('/ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('D:/Software_projects/Assignments/R/ProgrammingAssignment3')
outcome <- read.csv('/ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
print('sdfrsdafsdaf')
setwd('~/ProgrammingAssignment3')
outcome <- read.csv('outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
## Programming Assignment 3
## ?read.csv
setwd('~/ProgrammingAssignment3')
getwd()
setwd('~/ProgAssignment3-data')
getwd()
setwd('/ProgAssignment3-data')
setwd('ProgAssignment3-data')
getwd()
setwd(./)
setwd('./')
getwd()
getwd()
setwd('..')
getwd()
outcome <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
head(outcome)
getwd()
outcome <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
getwd()
head(outcome)
setwd('ProgAssignment3-data')
outcome <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
setwd('..')
outcome <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
hist(outcome[, 11])
factor(c(1,2,4,6,1,3,2,4,5,6,7,8,9,0,3,4,5,6,3,2))
factoo<-factor(c(1,2,4,6,1,3,2,4,5,6,7,8,9,0,3,4,5,6,3,2))
class(factoo)
numeric(factoo)
as.numeric(factoo)
args(factoo)
length(factoo)
factoo
levels(factoo)
as.numeric(levels(factoo))
facnum<-as.numeric(levels(factoo))
facnum
facnum[2]
Rprof()
Rprof(outcome)
Rprof(('ProgAssignment3-data/outcome-of-care-measures.csv', )
+                     colClasses= "character")
Rprof(('ProgAssignment3-data/outcome-of-care-measures.csv'))
class(outcome)
names(outcome)
levels(c(1,2,4,6,1,3,2,4,5,6,7,8,9,0,3,4,5,6,3,2))
state.list = levels(factor(outcome$State))
state.list
class(state.list)
names(outcome)
source (best.R)
pwd
pwd()
getwd()
source("best.R")
source("best.R")
source("best.R")
source("best.R")
source("best.R")
source("best.R")
best("TX","heart failure")
state.list == "heart attack"
state.list == "TX"
boolean(1)
as.boolean(1)
1!
!1
!
0
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
state="TX"
(state.list==state)
as.numeric(outcome.list==state))
as.numeric(outcome.list==state)
outcome.list = c("heart attack","heart failure","pneumonia")
as.numeric(state.list==state
as.numeric(state.list==state)
as.numeric(state.list==state)
sum(as.numeric(state.list==state))
if (sum(as.numeric(state.list==state))==0) return("invalid state")
if (sum(as.numeric(state.list==state))==0) return("invalid state")
state="AA"
if (sum(as.numeric(state.list==state))==0) return("invalid state")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
!sum(c(1,0,0,0,0))
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
outcome="heart failure"
outcome==outcome;list
outcome==outcome.list
best("TX","heart failure")
outcome==outcome.list
source("best.R")
best("TX","heart failure")
outcome.list
outcome.list = c("heart attack","heart failure","pneumonia")
"heart failure"==outcome.list
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
outcome.list
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
outcome <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
outcome.list
outcome.choice
source("best.R")
best("TX","heart failure")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
best("TXA","heart failur")
source("best.R")
best("TX","heart failure")
best("TX","heart failre")
source("best.R")
best("TX","heart failre")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
outcome.complete[1,0]
outcome.complete <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
outcome.complete[1,0]
(outcome.complete$state==state)
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
length(outcome.selected)
source("best.R")
length(outcome.selected)
best("TX","heart failure")
outcome.complete[(outcome.complete$state==state),]
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
(outcome.complete$state==state)
outcome.complete$state
outcome.complete
outcome.complete$state
outcome.complete$state
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
dimension(outcome.selected)
size()
dim(outcome.selected)
outcome.selected <- outcome.complete[(outcome.complete$State==state)]
dim(outcome.selected)
outcome.selected <- outcome.complete[(outcome.complete$State==state),]
dim(outcome.selected)
outcome.selected
outcome.complete$State==state
state
state="TX"
outcome.selected <- outcome.complete[(outcome.complete$State==state),]
dim(outcome.selected)
outcome.selected <- outcome.complete[(outcome.complete$State==state),
c(11,17,23)[outcome.choice==outcome]]
outcome.choice <- c("heart attack","heart failure","pneumonia")
c(11,17,23)[outcome.choice==outcome]]
outcome.selected <- outcome.complete[(outcome.complete$State==state),
c(11,17,23)[outcome.choice==outcome]]
dim(outcome.selected)
outcome
outcome="heart failure"
TRUE
!TRUE
source(best.R)
source("best.R")
best("TX","heart failure")
magic<-best("TX","heart failure")
dim(magic)
?stop
names(outcome.selected)
names(outcome.complete)
outcome.selected
source(best.R)
magical<-best("TX","heart failure")
magical
source(best.R)
source("best.R")
magical<-best("TX","heart failure")
outcome.selected <- outcome.complete[(outcome.complete$State==state),
c(2,11,17,23)[c(TRUE,outcome.choice==outcome)]]
outcome.selected
outcome.selected
dim(outcome.selected)
length(outcome.selected)
length(outcome.selected$Hospital.Name)
source("best.R")
magical<-best("TX","heart failure")
dim((outcome.selected$Hospital.Name))
ncol(outcome.selected)
ncol(outcome.selected$Hospital.Name)
outcome.selected$Hospital.Name
class(outcome.selected)
q()
outcome.complete <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv',
colClasses= "character")
fullname<-outcome$Hospital.Name
outcome.complete$Hospital.Name
dim(fullname)
ls()
fullname <- outcome.complete$Hospital.Name
dim(fullname)
length(fullname)
facname<-factors(fullname)
facname<-factor(fullname)
dim(facname)
length(facname)
levels(facname)
class(fullname)
class(facname)
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
magic <- split(outcome.complete,outcome.complete$Hospital.Name)
magic
dim(outcome.complete$Hospital.Name)
split(outcome.selected,outcome.selected$Hospital.Name)
split(outcome.selected,outcome.selected$Hospital.Name,drop="TRUE")
split(outcome.selected,outcome.selected$Hospital.Name,drop=TRUE)
split(outcome.selected,outcome.selected$Hospital.Name,drop=TRUE)
split(outcome.selected,outcome.selected$Hospital.Name,drop=TRUE)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)# Factor variable(Classification var.)
tapply(x, f, mean)
dim(outcome.selected)
names(outcome.selected)
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
trace()
trace(best("TX","heart attack"))
outcome.selected[,2]
source("best.R")
best("TX","heart attack")
traceback()
xdiag
source("best.R")
best("TX","heart attack")
traceback()
source("best.R")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
?match.fun
source("best.R")
best("TX","heart attack")
?match.fun
q()
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
source("best")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("rankhospiral.R")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
q()
if(1){}
if(1){ return 2}
if(1){ return(2)}
